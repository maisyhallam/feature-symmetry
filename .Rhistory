df <-
list.files(path = "data/age/one-to-ten/", pattern = "*.csv") %>%
map_df(~fread(.))
View(s1)
View(age_sims)
s1 <- read_csv('data/age/one-to-ten/set1.csv')
library(tidyverse)
s1 <- read_csv('data/age/one-to-ten/set1.csv')
s2 <- read_csv('data/age/one-to-ten/set2.csv')
s3 <- read_csv('data/age/one-to-ten/set3.csv')
s4 <- read_csv('data/age/one-to-ten/set4.csv')
s5 <- read_csv('data/age/one-to-ten/set5.csv')
s6 <- read_csv('data/age/one-to-ten/set6.csv')
s7 <- read_csv('data/age/one-to-ten/set7.csv')
s8 <- read_csv('data/age/one-to-ten/set8.csv')
s9 <- read_csv('data/age/one-to-ten/set9.csv')
s10 <- read_csv('data/age/one-to-ten/set10.csv')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = here::here())
library(tidyverse)
library(data.table)
age_sims <- rbind(s1,s2,s3,s4,s5,s6,s7,s8,s9,s10)
age_sims %>%
ggplot(aes(x=GENDER, fill=NUMBER)) +
geom_bar(position='dodge')
age_sims %>%
ggplot(aes(x=AGE, fill=NUMBER)) +
geom_bar(position='dodge')
age_sims %>%
ggplot(aes(x=AGE, fill=SET)) +
geom_bar(position='dodge')
#geom_bar(aes(y=..count../tapply(..count.., ..fill.. ,sum)[..fill..]), position='dodge')
age_sims %>%
ggplot(aes(x=AGE, fill=SET, group=1)) +
geom_bar(position='dodge')
#geom_bar(aes(y=..count../tapply(..count.., ..fill.. ,sum)[..fill..]), position='dodge')
age_sims %>%
ggplot(aes(x=AGE, fill=SET, group=10)) +
geom_bar(position='dodge')
#geom_bar(aes(y=..count../tapply(..count.., ..fill.. ,sum)[..fill..]), position='dodge')
age_sims <- rbind(s1,s2,s3,s4,s5,s6,s7,s8,s9,s10)
age_sims$SET.asfactor()
age_sims <- rbind(s1,s2,s3,s4,s5,s6,s7,s8,s9,s10)
as.factor(age_sims$SET)
age_sims <- rbind(s1,s2,s3,s4,s5,s6,s7,s8,s9,s10)
age_sims$SET <- as.factor(age_sims$SET)
age_sims %>%
ggplot(aes(x=AGE, fill=SET)) +
geom_bar(position='dodge')
#geom_bar(aes(y=..count../tapply(..count.., ..fill.. ,sum)[..fill..]), position='dodge')
age_sims %>%
ggplot(aes(x=AGE, fill=SET)) +
geom_bar(position='dodge') +
scale_fill_manual(values = c('black','black','black','black','black','black','black','black','black','black','black','black'))
#geom_bar(aes(y=..count../tapply(..count.., ..fill.. ,sum)[..fill..]), position='dodge')
age_sims %>%
ggplot(aes(x=AGE, fill=SET)) +
geom_bar(position='dodge') +
scale_fill_manual(values = c('black','grey','black','grey','black','grey','black','grey','black','grey','black','grey'))
#geom_bar(aes(y=..count../tapply(..count.., ..fill.. ,sum)[..fill..]), position='dodge')
age_sims %>%
ggplot(aes(x=AGE, fill=SET)) +
geom_bar(position='dodge') +
scale_fill_manual(values = c('black','#333333','black','#333333','black','#333333','black','#333333','black','#333333','black','#333333'))
#geom_bar(aes(y=..count../tapply(..count.., ..fill.. ,sum)[..fill..]), position='dodge')
real_age_data <- read_csv('data/kinbank_age.csv')
real_age_data <- real_age_data %>%
mutate(
SET = 'kinbank')
)
real_age_data <- real_age_data %>%
mutate(
SET = 'kinbank')
age_sims <- rbind(s1,s2,s3,s4,s5,real_age_data,s6,s7,s8,s9,s10)
age_sims$SET <- as.factor(age_sims$SET)
age_sims %>%
ggplot(aes(x=AGE, fill=SET)) +
geom_bar(position='dodge') +
scale_fill_manual(values = c('black','#333333','black','#333333','black','#333333','black','#333333','black','#333333','black','#333333'))
#geom_bar(aes(y=..count../tapply(..count.., ..fill.. ,sum)[..fill..]), position='dodge')
age_sims %>%
ggplot(aes(x=AGE, fill=SET)) +
geom_bar(position='dodge') +
scale_fill_manual(values = c('black','#333333','black','#333333','black','red','#333333','black','#333333','black','#333333','black','#333333'))
#geom_bar(aes(y=..count../tapply(..count.., ..fill.. ,sum)[..fill..]), position='dodge')
age_sims %>%
ggplot(aes(x=AGE, fill=SET)) +
geom_bar(position='dodge') +
scale_fill_manual(values = c('black','#333333','black','#333333','black','#333333','black','#333333','black','#333333','black','#333333','red'))
#geom_bar(aes(y=..count../tapply(..count.., ..fill.. ,sum)[..fill..]), position='dodge')
age_sims %>%
ggplot(aes(x=AGE, fill=SET)) +
geom_bar(position='dodge') +
scale_fill_manual(values = c('black','#333333','black','#333333','black','#333333','black','#333333','black','#333333','red'))
#geom_bar(aes(y=..count../tapply(..count.., ..fill.. ,sum)[..fill..]), position='dodge')
source("~/.active-rstudio-document", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = here::here())
library(tidyverse)
library(data.table)
tbl_fread <-
list.files(path = 'data/age/one-to-ten/', pattern = "*.csv") %>%
map_df(~fread(.))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = here::here())
library(tidyverse)
library(readr)
library(dplyr)
gender_prop_files <- list.files(path="data/gender/prop/",pattern="*.csv",full.names=TRUE)
gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
gender_data <- gender_data %>%
mutate(
TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
'simulation',
'kinbank'
))
View(gender_data)
gender_data <- gender_data[-1,]
gender_data <- gender_data[-1,]
gender_data$GEN_0 <- as.numeric(gender_data$GEN_0)
gender_data$GEN_1 <- as.numeric(gender_data$GEN_1)
simulation_proportions <- filter(gender_data,TYPE == 'simulation')
kinbank_proportions <- filter(gender_data,TYPE == 'kinbank')
sim_prop_sample <- sample_n(simulation_proportions,1000, replace=FALSE)
kinbank_prop_sample <- sample_n(kinbank_proportions,1000,replace=FALSE)
gender_sampled <- rbind(sim_prop_sample,kinbank_prop_sample)
gender_sampled %>%
ggplot(aes(GEN1, GEN2)) +
geom_jitter(alpha = 0.5)
gender_sampled %>%
ggplot(aes(GEN_1, GEN_2)) +
geom_jitter(alpha = 0.5)
gender_sampled %>%
ggplot(aes(GEN_0, GEN_1)) +
geom_jitter(alpha = 0.5)
gender_sampled %>%
ggplot(aes(GEN_0, GEN_1)) +
geom_point()
gender_sampled %>%
ggplot(aes(GEN_0, GEN_1, fill=TYPE)) +
geom_point()
gender_sampled %>%
ggplot() +
geom_point(aes(GEN_0, GEN_1, fill=TYPE))
gender_sampled %>%
ggplot() +
geom_point(aes(GEN_0, GEN_1),, fill=TYPE)
gender_sampled %>%
ggplot() +
geom_point(aes(GEN_0, GEN_1), fill=TYPE)
gender_sampled %>%
ggplot() +
geom_point(aes(GEN_0, GEN_1), fill=TYPE))
gender_sampled %>%
ggplot() +
geom_point(aes(GEN_0, GEN_1), fill=TYPE)
gender_sampled %>%
ggplot() +
geom_point(aes(GEN_0, GEN_1,fill=type)
gender_sampled %>%
ggplot() +
geom_point(aes(GEN_0, GEN_1,fill=type))
gender_sampled %>%
ggplot() +
geom_point(aes(GEN_0, GEN_1,fill=TYPE))
gender_sampled %>%
ggplot() +
geom_point(aes(GEN_0, GEN_1,fill=TYPE)) +
geom_smooth(method=lm, se=FALSE)
gender_sampled %>%
ggplot() +
geom_point(aes(x=GEN_0, y=GEN_1,fill=TYPE)) +
geom_smooth(method=lm, se=FALSE)
gender_sampled %>%
ggplot() +
geom_point(aes(x=GEN_0, y=GEN_1,fill=TYPE))
gender_sampled %>%
ggplot() +
geom_point(aes(x=GEN_0, y=GEN_1,color=TYPE))
gender_sampled %>%
ggplot() +
geom_point(aes(x=GEN_0, y=GEN_1,color=TYPE,alpha=0.2))
gender_sampled %>%
ggplot() +
geom_jitter(aes(x=GEN_0, y=GEN_1,color=TYPE,alpha=0.2))
sim_prop_sample <- sample_n(simulation_proportions,500, replace=FALSE)
kinbank_prop_sample <- sample_n(kinbank_proportions,500,replace=FALSE)
gender_sampled %>%
ggplot() +
geom_jitter(aes(x=GEN_0, y=GEN_1,color=TYPE,alpha=0.2))
sim_prop_sample <- sample_n(simulation_proportions,100, replace=FALSE)
kinbank_prop_sample <- sample_n(kinbank_proportions,100,replace=FALSE)
gender_sampled %>%
ggplot() +
geom_jitter(aes(x=GEN_0, y=GEN_1,color=TYPE,alpha=0.2))
gender_sampled %>%
ggplot() +
geom_jitter(aes(x=GEN_0, y=GEN_1,color=TYPE) alpha=0.2))
gender_sampled %>%
ggplot() +
geom_jitter(aes(x=GEN_0, y=GEN_1,color=TYPE),alpha=0.2))
gender_sampled %>%
ggplot() +
geom_jitter(aes(x=GEN_0, y=GEN_1,color=TYPE),alpha=0.2)
sim_prop_sample <- sample_n(simulation_proportions,1000, replace=FALSE)
kinbank_prop_sample <- sample_n(kinbank_proportions,1000,replace=FALSE)
gender_sampled <- rbind(sim_prop_sample,kinbank_prop_sample)
gender_sampled %>%
ggplot() +
geom_jitter(aes(x=GEN_0, y=GEN_1,color=TYPE),alpha=0.2)
ie <- read_csv('data/gender/prop/kinbank_Indo-European.csv')
am <- read_csv('data/gender/prop/kinbank_Austronesian.csv')
ieam <- rbind(ie,am)
ieam %>%
ggplot(aes(GEN_0,fill = TYPE)) +
geom_density(alpha = 0.5) +
labs(
title = "Distribution of relationships that are distinguished by gender in Ego's generation",
color = legend) +
xlab('Proportion of relationships') +
xlim(0,1)
ieam %>%
ggplot(aes(GEN_0,fill = SET)) +
geom_density(alpha = 0.5) +
labs(
title = "Distribution of relationships that are distinguished by gender in Ego's generation",
color = legend) +
xlab('Proportion of relationships') +
xlim(0,1)
ie_sample <- sample_n(ie,95, replace=FALSE)
an_sample <- sample_n(am,95,replace=FALSE)
iean %>%
ggplot(aes(GEN_0,fill = SET)) +
geom_density(alpha = 0.5) +
labs(
title = "Distribution of relationships that are distinguished by gender in Ego's generation",
color = legend) +
xlab('Proportion of relationships') +
xlim(0,1)
ie_sample <- sample_n(ie,95, replace=FALSE)
an_sample <- sample_n(am,95,replace=FALSE)
iean <- rbind(ie_sample,an_sample)
iean %>%
ggplot(aes(GEN_0,fill = SET)) +
geom_density(alpha = 0.5) +
labs(
title = "Distribution of relationships that are distinguished by gender in Ego's generation",
color = legend) +
xlab('Proportion of relationships') +
xlim(0,1)
iean %>%
ggplot(aes(GEN_1,fill = SET)) +
geom_density(alpha = 0.5) +
labs(
title = "Distribution of relationships that are distinguished by gender in Ego's parents' generation",
color = legend) +
xlab('Proportion of relationships') +
xlim(0,1)
ie_sample <- sample_n(ie,95, replace=FALSE)
an_sample <- sample_n(am,95,replace=FALSE)
iean <- rbind(ie_sample,an_sample)
iean %>%
ggplot(aes(GEN_0,fill = SET)) +
geom_density(alpha = 0.5) +
labs(
title = "Distribution of relationships that are distinguished by gender in Ego's generation",
color = legend) +
xlab('Proportion of relationships') +
xlim(0,1)
iean %>%
ggplot(aes(GEN_1,fill = SET)) +
geom_density(alpha = 0.5) +
labs(
title = "Distribution of relationships that are distinguished by gender in Ego's parents' generation",
color = legend) +
xlab('Proportion of relationships') +
xlim(0,1)
iean %>%
ggplot() +
geom_jitter(aes(x=GEN_0, y=GEN_1,color=SET),alpha=0.2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = here::here())
library(tidyverse)
ICS_files <- list.files(path="data/ICS/",pattern="*.csv",full.names=TRUE)
ICS_data <- do.call(rbind, lapply(ICS_files, function(x) read.csv(x)))
ICS_data <- ICS_data %>%
mutate(
TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
'simulation',
'kinbank'
))
simulation_data <- filter(ICS_data,TYPE == 'simulation')
kinbank_data <- filter(ICS_data,TYPE == 'kinbank')
sim_sample <- sample_n(simulation_data,600, replace=FALSE)
kinbank_sample <- sample_n(kinbank_data,600,replace=FALSE)
ICS_sampled <- rbind(sim_sample,kinbank_sample)
ICS_sampled %>%
ggplot(aes(SCORE,fill = TYPE)) +
geom_density(alpha = 0.5) +
labs(
title = 'Proportion of categories that are predictable',
color = legend) +
xlab('Proportion of internal co-selection') +
xlim(0,1)
#ggsave('plots/ICS_density.png')
ICS_sampled %>%
ggplot(aes(TYPE,SCORE,fill = TYPE)) +
geom_violin() +
geom_jitter(width = 0.1, alpha = 0.2) +
labs(
title = "Proportion of predictable relationships",
color = legend) +
xlab('Proportion of ICS')
#ggsave('plots/ICS_jitter.png')
gender_prop_files <- list.files(path="data/gender/prop/",pattern="*.csv",full.names=TRUE)
gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
gender_data <- gender_data %>%
mutate(
TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
'simulation',
'kinbank'
))
gender_data <- gender_data[-1,]
gender_data$GEN_0 <- as.numeric(gender_data$GEN_0)
gender_data$GEN_1 <- as.numeric(gender_data$GEN_1)
simulation_proportions <- filter(gender_data,TYPE == 'simulation')
kinbank_proportions <- filter(gender_data,TYPE == 'kinbank')
sim_prop_sample <- sample_n(simulation_proportions,1000, replace=FALSE)
kinbank_prop_sample <- sample_n(kinbank_proportions,1000,replace=FALSE)
gender_sampled <- rbind(sim_prop_sample,kinbank_prop_sample)
gender_sampled %>%
ggplot(aes(TYPE,GEN_0,fill = TYPE)) +
geom_violin() +
geom_jitter(width = 0.1, alpha = 0.2) +
labs(
title = "Proportion of relationships that are distinguished by gender in Ego's generation",
color = legend) +
xlab('Proportion of relationships')
#ggsave('plots/gender_proportion_jitter.png')
gender_sampled %>%
ggplot(aes(GEN_0,fill = TYPE)) +
geom_density(alpha = 0.5) +
labs(
title = "Distribution of relationships that are distinguished by gender in Ego's generation",
color = legend) +
xlab('Proportion of relationships') +
xlim(0,1)
#ggsave('plots/gender_g1_proportion_density.png')
gender_sampled %>%
ggplot(aes(GEN_1,fill = TYPE)) +
geom_density(alpha = 0.5) +
labs(
title = "Distribution of relationships that are distinguished by gender in Ego's Parents' generation",
color = legend) +
xlab('Proportion of relationships') +
xlim(0,1)
#ggsave('plots/gender__g2_proportion_density.png')
gender_sampled %>%
ggplot() +
geom_jitter(aes(x=GEN_0, y=GEN_1,color=TYPE),alpha=0.2,width = 0.2) +
xlim(0,1) +
ylim(0,1)
summary(gender_sampled)
ie_g <- read_csv('data/gender/prop/families/kinbank_Indo-European.csv')
an_g <- read_csv('data/gender/prop/families/kinbank_Austronesian.csv')
ie_g_sample <- sample_n(ie,95, replace=FALSE)
an_g_sample <- sample_n(am,95,replace=FALSE)
iean_g <- rbind(ie_g_sample,an_g_sample)
iean_g %>%
ggplot(aes(GEN_0,fill = SET)) +
geom_density(alpha = 0.5) +
labs(
title = "Distribution of relationships that are distinguished by gender in Ego's generation",
color = legend) +
xlab('Proportion of relationships') +
xlim(0,1)
iean_g %>%
ggplot(aes(GEN_1,fill = SET)) +
geom_density(alpha = 0.5) +
labs(
title = "Distribution of relationships that are distinguished by gender in Ego's parents' generation",
color = legend) +
xlab('Proportion of relationships') +
xlim(0,1)
iean_g %>%
ggplot() +
geom_jitter(aes(x=GEN_0, y=GEN_1,color=SET),alpha=0.2)
gender_sampled %>%
ggplot(aes(GEN_1,fill = TYPE)) +
geom_density(alpha = 0.5) +
geom_rug() +
labs(
title = "Distribution of relationships that are distinguished by gender in Ego's Parents' generation",
color = legend) +
xlab('Proportion of relationships') +
xlim(0,1)
#ggsave('plots/gender__g2_proportion_density.png')
gender_sampled %>%
ggplot(aes(GEN_0,fill = TYPE)) +
geom_density(alpha = 0.5) +
geom_rug() +
labs(
title = "Distribution of relationships that are distinguished by gender in Ego's generation",
color = legend) +
xlab('Proportion of relationships') +
xlim(0,1)
#ggsave('plots/gender_g1_proportion_density.png')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = here::here())
library(tidyverse)
age_sampled %>%
ggplot(aes(GEN_0,fill = TYPE)) +
geom_density(alpha = 0.5) +
geom_rug() +
labs(
title = "Distribution of relationships that are distinguished by age in Ego's generation",
color = legend) +
xlab('Proportion of relationships') +
xlim(0,1)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = here::here())
library(tidyverse)
age_prop_files <- list.files(path="data/age/prop/",pattern="*.csv",full.names=TRUE)
age_data <- do.call(rbind, lapply(age_prop_files, function(x) read.csv(x)))
age_data <- age_data %>%
mutate(
TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
'simulation',
'kinbank'
))
age_data$GEN_0 <- as.numeric(age_data$GEN_0)
age_data$GEN_1 <- as.numeric(age_data$GEN_1)
simulation_proportions <- filter(age_data,TYPE == 'simulation')
kinbank_proportions <- filter(age_data,TYPE == 'kinbank')
sim_prop_sample <- sample_n(simulation_proportions,1000, replace=FALSE)
kinbank_prop_sample <- sample_n(kinbank_proportions,1000,replace=FALSE)
age_sampled <- rbind(sim_prop_sample,kinbank_prop_sample)
age_sampled %>%
ggplot(aes(TYPE,GEN_0,fill = TYPE)) +
geom_violin() +
geom_jitter(width = 0.1, alpha = 0.2) +
labs(
title = "Proportion of relationships that are distinguished by age in Ego's generation",
color = legend) +
xlab('Proportion of relationships')
#ggsave('plots/age_proportion_jitter.png')
age_sampled %>%
ggplot(aes(GEN_0,fill = TYPE)) +
geom_density(alpha = 0.5) +
geom_rug() +
labs(
title = "Distribution of relationships that are distinguished by age in Ego's generation",
color = legend) +
xlab('Proportion of relationships') +
xlim(0,1)
#ggsave('plots/age_g1_proportion_density.png')
age_sampled %>%
ggplot(aes(GEN_1,fill = TYPE)) +
geom_density(alpha = 0.5) +
geom_rug() +
labs(
title = "Distribution of relationships that are distinguished by age in Ego's Parents' generation",
color = legend) +
xlab('Proportion of relationships') +
xlim(0,1)
#ggsave('plots/age__g2_proportion_density.png')
age_sampled %>%
ggplot() +
geom_jitter(aes(x=GEN_0, y=GEN_1,color=TYPE),alpha=0.2,width=0.2) +
xlim(0,1) +
ylim(0,1)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = here::here())
library(tidyverse)
lineage_prop_files <- list.files(path="data/lineage/prop/",pattern="*.csv",full.names=TRUE)
lineage_data <- do.call(rbind, lapply(lineage_prop_files, function(x) read.csv(x)))
lineage_data <- lineage_data %>%
mutate(
TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
'simulation',
'kinbank'
))
#lineage_data <- lineage_data[-1,]
lineage_data$GEN_0 <- as.numeric(lineage_data$GEN_0)
lineage_data$GEN_1 <- as.numeric(lineage_data$GEN_1)
lineage_data$GEN_0 <- as.numeric(lineage_data$GEN_0)
lineage_data$GEN_1 <- as.numeric(lineage_data$GEN_1)
simulation_proportions <- filter(lineage_data,TYPE == 'simulation')
kinbank_proportions <- filter(lineage_data,TYPE == 'kinbank')
simulation_proportions <- filter(lineage_data,TYPE == 'simulation')
kinbank_proportions <- filter(lineage_data,TYPE == 'kinbank')
sim_prop_sample <- sample_n(simulation_proportions,767, replace=FALSE)
kinbank_prop_sample <- sample_n(kinbank_proportions,767,replace=FALSE)
lineage_sampled <- rbind(sim_prop_sample,kinbank_prop_sample)
lineage_sampled %>%
ggplot(aes(GEN_0,fill = TYPE)) +
geom_density(alpha = 0.5) +
labs(
title = "Distribution of relationships that are distinguished by parent relation in Ego's generation",
color = legend) +
xlab('Proportion of relationships') +
xlim(0,1)
#ggsave('plots/lineage_g1_proportion_density.png')
lineage_sampled %>%
ggplot(aes(GEN_1,fill = TYPE)) +
geom_density(alpha = 0.5) +
labs(
title = "Distribution of relationships that are distinguished by parent relation in Ego's Parents' generation",
color = legend) +
xlab('Proportion of relationships') +
xlim(0,1)
#ggsave('plots/lineage__g2_proportion_density.png')
