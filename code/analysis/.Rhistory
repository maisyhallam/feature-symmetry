proportion_01 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.3649), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 0,1 age asymmetry scores',
color = legend) +
xlab('Proportion of 0,1 asymmetry') +
xlim(0,1)
#gsave('plots/gender_0,1_density.png')
proportion_01 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.3649), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 0,1 age asymmetry scores',
color = legend) +
xlab('Proportion of 0,1 asymmetry') +
xlim(0,0.3)
#gsave('plots/gender_0,1_density.png')
proportion_01 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.3649), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 0,1 age symmetry scores',
color = legend) +
xlab('Proportion of 0,1 asymmetry') +
xlim(0,0.4)
#gsave('plots/gender_0,1_density.png')
proportion_01 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.3649), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 0,1 age symmetry scores',
color = legend) +
xlab('Proportion of 0,1 asymmetry') +
xlim(0,0.4)
ggsave('plots/gender_0,1_density.png')
proportion_00 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.2686), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 0,0 side of the family asymmetry scores',
color = legend) +
xlab('Proportion of 0,0 symmetry') +
xlim(0,0.3)
ggsave('plots/age_0,0_density.png')
proportion_00 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.2686), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 0,0 side of the family asymmetry scores',
color = legend) +
xlab('Proportion of 0,0 symmetry') +
xlim(0,0.4)
#gsave('plots/age_0,0_density.png')
proportion_00 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.2686), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 0,0 side of the family asymmetry scores',
color = legend) +
xlab('Proportion of 0,0 symmetry') +
xlim(0,0.4)
ggsave('plots/age_0,0_density.png')
proportion_01 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.3649), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 0,1 age symmetry scores',
color = legend) +
xlab('Proportion of 0,1 asymmetry') +
xlim(0,0.4)
ggsave('plots/age_0,1_density.png')
proportion_10 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.4641), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 1,0 age asymmetry scores',
color = legend) +
xlab('Proportion of 1,0 asymmetry') +
xlim(0.4,0.7)
ggsave('age_1,0_density.png')
proportion_10 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.4641), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 1,0 age asymmetry scores',
color = legend) +
xlab('Proportion of 1,0 asymmetry') +
xlim(0.4,0.7)
ggsave('age_1,0_density.png')
proportion_10 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.4641), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 1,0 age asymmetry scores',
color = legend) +
xlab('Proportion of 1,0 asymmetry') +
xlim(0.4,0.7)
ggsave('age_1,0_density.png')
proportion_10 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.4641), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 1,0 age asymmetry scores',
color = legend) +
xlab('Proportion of 1,0 asymmetry') +
xlim(0.4,0.7)
ggsave('plots/age_1,0_density.png')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = here::here())
library(tidyverse)
library(readr)
lineage_sims <- list.files(path="data/lineage/new/",pattern="*.csv",full.names=TRUE)
data <- do.call(rbind, lapply(lineage_sims, function(x) read.csv(x)))
real_data <- read_csv('data/kinbank_lineage.csv')
data$LINEAGE <- as.factor(data$LINEAGE)
sym_proportion <- group_by(data,SET) %>%
summarise(
mean_symmetrical = mean(LINEAGE == '[1, 1]')
)
sym_proportion
real_data <- real_data %>%
mutate(
SET = 'kinbank'
)
kinbank <- group_by(real_data,SET) %>%
summarise(
mean_symmetrical = mean(LINEAGE == '[1, 1]')
)
all_data <- rbind(sym_proportion,kinbank)
sym_proportion %>%
ggplot(aes(mean_symmetrical)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.4250), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Distribution of 1,1 side of the family symmetry scores',
color = legend) +
xlab('Proportion of 1,1 symmetry') +
xlim(0.1,0.45)
ggsave('plots/lineage_1,1_density.png')
proportion_10 <- group_by(data,SET) %>%
summarise(
mean = mean(LINEAGE == '[1, 0]')
)
proportion_01 <- group_by(data,SET) %>%
summarise(
mean = mean(LINEAGE == '[0, 1]')
)
proportion_00 <- group_by(data,SET) %>%
summarise(
mean = mean(LINEAGE == '[0, 0]')
)
kinbank_prop_10 <- real_data %>%
summarise(
mean = mean(LINEAGE == '[1, 0]')
)
kinbank_prop_01 <- real_data %>%
summarise(
mean = mean(LINEAGE == '[0, 1]')
)
kinbank_prop_00 <- real_data %>%
summarise(
mean = mean(LINEAGE == '[0, 0]')
)
kinbank_prop_10
kinbank_prop_01
kinbank_prop_00
proportion_10 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.0795), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 1,0 side of the family asymmetry scores',
color = legend) +
xlab('Proportion of 1,0 asymmetry') +
xlim(0,0.15)
ggsave('lineage_1,0_density.png')
proportion_01 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.2269), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 0,1 side of the family asymmetry scores',
color = legend) +
xlab('Proportion of 0,1 asymmetry') +
xlim(0.2,0.7)
ggsave('plots/lineage_0,1_density.png')
proportion_00 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.2686), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 0,0 side of the family asymmetry scores',
color = legend) +
xlab('Proportion of 0,0 symmetry') +
xlim(0,0.3)
ggsave('plots/lineage_0,0_density.png')
proportion_10 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.0795), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 1,0 side of the family asymmetry scores',
color = legend) +
xlab('Proportion of 1,0 asymmetry') +
xlim(0,0.15)
ggsave('plots/lineage_1,0_density.png')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = here::here())
library(tidyverse)
library(readr)
gender_sims <- list.files(path="data/gender/new/",pattern="*.csv",full.names=TRUE)
data <- do.call(rbind, lapply(gender_sims, function(x) read.csv(x)))
real_data <- read_csv('data/kinbank_gender.csv')
data$GENDER <- as.factor(data$GENDER)
sym_proportion <- group_by(data,SET) %>%
summarise(
mean_symmetrical = mean(GENDER == '[1, 1]')
)
sym_proportion
kinbank <- real_data %>%
summarise(
mean_symmetrical = mean(GENDER == '[1, 1]')
)
sym_proportion %>%
ggplot(aes(mean_symmetrical)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.7684), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 1,1 gender symmetry scores',
color = legend) +
xlab('Proportion of 1,1 symmetry') +
xlim(0.75,0.9)
ggsave('plots/gender_1,1_density.png')
proportion_10 <- group_by(data,SET) %>%
summarise(
mean = mean(GENDER == '[1, 0]')
)
proportion_01 <- group_by(data,SET) %>%
summarise(
mean = mean(GENDER == '[0, 1]')
)
proportion_00 <- group_by(data,SET) %>%
summarise(
mean = mean(GENDER == '[0, 0]')
)
proportion_10
kinbank_prop_10 <- real_data %>%
summarise(
mean = mean(GENDER == '[1, 0]')
)
kinbank_prop_01 <- real_data %>%
summarise(
mean = mean(GENDER == '[0, 1]')
)
kinbank_prop_00 <- real_data %>%
summarise(
mean = mean(GENDER == '[0, 0]')
)
kinbank_prop_10
kinbank_prop_01
kinbank_prop_00
proportion_10 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.037), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 1,0 gender symmetry scores',
color = legend) +
xlab('Proportion of 1,0 asymmetry') +
xlim(0,0.10)
ggsave('plots/gender_1,0_density.png')
proportion_01 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.1703), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 0,1 gender symmetry scores',
color = legend) +
xlab('Proportion of 0,1 asymmetry') +
xlim(0,0.2)
ggsave('plots/gender_0,1_density.png')
proportion_00 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.0278), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 0,0 gender symmetry scores',
color = legend) +
xlab('Proportion of 0,0 symmetry') +
xlim(0,0.1)
ggsave('plots/gender_0,0_density.png')
proportion_00 %>%
ggplot(aes(mean)) +
geom_density(fill = 'lightblue', alpha = 1) +
geom_vline(aes(xintercept = 0.2686), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Proportion of 0,0 age asymmetry scores',
color = legend) +
xlab('Proportion of 0,0 symmetry') +
xlim(0,0.4)
ggsave('plots/age_0,0_density.png')
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = here::here())
library(tidyverse)
gender_prop_files <- list.files(path="data/gender/prop/",pattern="*.csv",full.names=TRUE)
gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
gender_data <- gender_data %>%
mutate(
TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
'simulation',
'kinbank'
))
gender_data <- gender_data[-1,]
gender_data <- gender_data[-1,]
gender_data$GEN_0 <- as.numeric(gender_data$GEN_0)
gender_data$GEN_1 <- as.numeric(gender_data$GEN_1)
simulation_proportions <- filter(gender_data,TYPE == 'simulation')
kinbank_proportions <- filter(gender_data,TYPE == 'kinbank')
sim_prop_sample <- sample_n(simulation_proportions,1000, replace=FALSE)
kinbank_prop_sample <- sample_n(kinbank_proportions,1000,replace=FALSE)
gender_sampled <- rbind(sim_prop_sample,kinbank_prop_sample)
gender_sampled %>%
ggplot() +
geom_jitter(aes(x=GEN_0, y=GEN_1,color=TYPE),alpha=0.2,width = 0.2) +
xlim(0,1) +
ylim(0,1)
sim_prop_sample <- sample_n(simulation_proportions,1000, replace=FALSE)
kinbank_prop_sample <- sample_n(kinbank_proportions,1000,replace=FALSE)
gender_sampled <- rbind(sim_prop_sample,kinbank_prop_sample)
gender_sampled %>%
ggplot() +
geom_jitter(aes(x=GEN_0, y=GEN_1,color=TYPE),alpha=0.2,width = 0.2) +
xlim(0,1) +
ylim(0,1)
lmGender <- lm(GEN_0,GEN_1, data=gender_data)
lmGender <- lm(GEN_0~GEN_1, data=gender_data)
lmGender
lmGender <- lm(GEN_0~GEN_1, data=gender_data)
summary(lmGender)
lmGender <- lm(GEN_0~GEN_1, data=kinbank_proportions)
summary(lmGender)
gender_sampled %>%
ggplot() +
geom_jitter(aes(x=GEN_0, y=GEN_1,color=TYPE),alpha=0.2,width = 0.2) +
xlim(0,1) +
ylim(0,1) +
geom_smooth(method=lm, se=FALSE)
gender_sampled %>%
ggplot(aes(x=GEN_0, y=GEN_1,color=TYPE)) +
geom_jitter(alpha=0.2,width = 0.2) +
xlim(0,1) +
ylim(0,1) +
geom_smooth(method=lm, se=FALSE)
gender_sampled %>%
ggplot(aes(x=GEN_0, y=GEN_1,color=TYPE)) +
geom_jitter(alpha=0.2,width = 0.2) +
xlim(0,1) +
ylim(0,1) +
geom_smooth(method=lm)
kinbank_proportions %>%
ggplot(aes(x=GEN_0, y=GEN_1,color=TYPE)) +
geom_jitter(alpha=0.2,width = 0.2) +
xlim(0,1) +
ylim(0,1) +
geom_smooth(method=lm)
kinbank_proportions %>%
ggplot(aes(x=GEN_0, y=GEN_1,color=TYPE)) +
geom_jitter(alpha=0.2,width = 0.2) +
xlim(0,1) +
ylim(0,1) +
geom_smooth(method=lm,se=FALSE)
kinbank_proportions %>%
ggplot(aes(x=GEN_0, y=GEN_1)) +
geom_jitter(alpha=0.2,width = 0.2) +
xlim(0,1) +
ylim(0,1) +
geom_smooth(method=lm,se=FALSE)
lmGender0from1 <- lm(GEN_0~GEN_1, data=kinbank_proportions)
summary(lmGender0from1)
lmGender1from0 <- lm(GEN_1~GEN_0, data=kinbank_proportions)
summary(lmGender1from0)
lmGender0from1 <- lm(GEN_0~GEN_1, data=kinbank_proportions)
summary(lmGender0from1)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = here::here())
library(tidyverse)
library(lme4)
lmGender0from1 <- lmer(GEN_0~GEN_1, + (1 | LANGUAGE, data=kinbank_proportions)
lmGender0from1 <- lmer(GEN_0 ~ GEN_1 + (1 | LANGUAGE, data=kinbank_proportions)
lmGender0from1 <- lmer(GEN_0 ~ GEN_1 + (1 | LANGUAGE), data=kinbank_proportions)
summary(lmGender0from1)
lmGender <- lmer(GEN_0 ~ GEN_1 + (1 | LANGUAGE), data=kinbank_proportions)
summary(lmGender)
lmGender <- lm(GEN_0 ~ GEN_1, data=kinbank_proportions)
lmerGender <- lmer(GEN_0 ~ GEN_1 + (1 | LANGUAGE), data=kinbank_proportions)
summary(lmerGender)
lmGender <- lm(GEN_0 ~ GEN_1, data=kinbank_proportions)
lmerGender <- lmer(GEN_0 ~ GEN_1 + (1 | LANGUAGE), data=kinbank_proportions)
summary(lmGender)
summary(lmerGender)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
true_probs <- c(0.2,0.1,0.05,0.15,0.1,0.1,0.3)
original_sample <- rmultinom(1, 100, true_probs)
simulated_samples <- rmultinom(100000, 100, original_sample[,1])
original_sample_df <- data.frame("value"=c(1:length(true_probs)),
"count"=original_sample[,1],
"sample"="original")
first_1 <- data.frame("value"=c(1:length(true_probs)),
"count"=simulated_samples[,1],
"sample"="average of 1")
first_10 <- data.frame("value"=c(1:length(true_probs)),
"count"=rowMeans(simulated_samples[,1:10]),
"sample"="average of 10")
first_100 <- data.frame("value"=c(1:length(true_probs)),
"count"=rowMeans(simulated_samples[,1:100]),
"sample"="average of 100")
first_1000 <- data.frame("value"=c(1:length(true_probs)),
"count"=rowMeans(simulated_samples[,1:1000]),
"sample"="average of 1000")
first_10000 <- data.frame("value"=c(1:length(true_probs)),
"count"=rowMeans(simulated_samples[,1:10000]),
"sample"="average of 10000")
first_100000 <- data.frame("value"=c(1:length(true_probs)),
"count"=rowMeans(simulated_samples[,1:100000]),
"sample"="average of 100000")
ggplot(data=rbind(original_sample_df,first_1),aes(x=value,y=count,fill=sample)) +
geom_bar(stat="identity",position = 'dodge')
ggplot(data=rbind(original_sample_df,first_10),aes(x=value,y=count,fill=sample)) +
geom_bar(stat="identity",position = 'dodge')
ggplot(data=rbind(original_sample_df,first_100),aes(x=value,y=count,fill=sample)) +
geom_bar(stat="identity",position = 'dodge')
ggplot(data=rbind(original_sample_df,first_1000),aes(x=value,y=count,fill=sample)) +
geom_bar(stat="identity",position = 'dodge')
ggplot(data=rbind(original_sample_df,first_10000),aes(x=value,y=count,fill=sample)) +
geom_bar(stat="identity",position = 'dodge')
ggplot(data=rbind(original_sample_df,first_100000),aes(x=value,y=count,fill=sample)) +
geom_bar(stat="identity",position = 'dodge')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # for data preprocessing
library(ggplot2) # for plotting
library(lme4) # for model fitting
simulations %>% group_by(SET)
gender_prop_files <- list.files(path="data/gender/prop/",pattern="*.csv",full.names=TRUE)
gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
gender_data <- gender_data %>%
mutate(
TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
'simulation',
'kinbank'
))
gender_prop_files <- list.files(path="data/gender/prop/",pattern="*.csv",full.names=TRUE)
gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
gender_prop_files <- list.files(path="data/gender/prop/",pattern="*.csv",full.names=TRUE)
gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
gender_prop_files <- list.files(path="data/gender/prop/",pattern="*.csv",full.names=TRUE)
gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
gender_prop_files <- list.files(path="data/gender/prop/",pattern="*.csv",full.names=TRUE)
gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
gender_data <- gender_data %>%
mutate(
TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
'simulation',
'kinbank'
))
gender_prop_files <- list.files(path="data/gender/prop/",pattern="*.csv",full.names=TRUE)
gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
gender_data <- gender_data %>%
mutate(
TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
'simulation',
'kinbank'
))
gender_prop_files <- list.files(path="../../data/gender/prop/",pattern="*.csv",full.names=TRUE)
gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
gender_data <- gender_data %>%
mutate(
TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
'simulation',
'kinbank'
))
gender_prop_files <- list.files(path="../../data/gender/prop/",pattern="*.csv",full.names=TRUE)
gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
gender_data <- gender_data %>%
mutate(
TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
'simulation',
'kinbank'
))
gender_prop_files <- list.files(path="././data/gender/prop/",pattern="*.csv",full.names=TRUE)
gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
gender_prop_files <- list.files(path="data/gender/prop/",pattern="*.csv",full.names=TRUE)
gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
gender_data <- gender_data %>%
mutate(
TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
'simulation',
'kinbank'
))
