kinbank_prop_sample <- sample_n(kinbank,1000,replace=FALSE)
rbind(sim_prop_sample,kinbank_prop_sample) %>%
ggplot() +
geom_histogram(aes(GEN_0,fill=TYPE),position='dodge')
simulation_means %>%
ggplot(aes(MEAN0)) +
geom_histogram(fill = 'lightblue', color = 'navy', alpha = 1) +
geom_vline(aes(xintercept = 0.3581), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Mean proportion of age distinctions in Ego generation',
color = legend) +
xlab('GEN_0 means')
simulation_means %>%
ggplot(aes(MEAN1)) +
geom_histogram(fill = 'lightblue', color = 'navy', alpha = 1) +
geom_vline(aes(xintercept = 0.1241), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Mean proportion of age distinctions in Ego parent generation',
color = legend) +
xlab('GEN_1 means')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # for data preprocessing
library(ggplot2) # for plotting
library(lme4) # for model fitting
lineage_prop_files <- list.files(path="../../data/raw/lineage/prop/",pattern="*.csv",full.names=TRUE)
lineage_data <- do.call(rbind, lapply(lineage_prop_files, function(x) read.csv(x)))
lineage_data <- lineage_data %>%
mutate(
TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
'simulation',
'kinbank'
))
lineage_data$GEN_0 <- as.numeric(lineage_data$GEN_0)
lineage_data$GEN_1 <- as.numeric(lineage_data$GEN_1)
lineage_data
write.csv(lineage_data, '../../data/processed/all_lineage_proportions.csv')
simulations <- filter(lineage_data,TYPE == 'simulation')
kinbank <- filter(lineage_data,TYPE == 'kinbank')
write.csv(kinbank, '../../data/processed/kinbank_lineage_proportions.csv')
write.csv(simulations, '../../data/processed/simulated_lineage_proportions.csv')
simulation_means <- group_by(simulations,SET) %>%
summarise(
MEAN0 = mean(GEN_0),
MEAN1 = mean(GEN_1)
)
kinbank_mean <- group_by(kinbank,SET) %>%
summarise(
MEAN0 = mean(GEN_0),
MEAN1 = mean(GEN_1)
)
simulation_means
kinbank_mean
sim_prop_sample <- sample_n(simulations,767, replace=FALSE)
kinbank_prop_sample <- sample_n(kinbank,767,replace=FALSE)
rbind(sim_prop_sample,kinbank_prop_sample) %>%
ggplot() +
geom_histogram(aes(GEN_0,fill=TYPE),position='dodge')
simulation_means %>%
ggplot(aes(MEAN0)) +
geom_histogram(fill = 'lightblue', color = 'navy', alpha = 1) +
geom_vline(aes(xintercept = 0.5077), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Mean proportion of lineage distinctions in Ego generation',
color = legend) +
xlab('GEN_0 means')
rbind(sim_prop_sample,kinbank_prop_sample) %>%
ggplot() +
geom_histogram(aes(GEN_1,fill=TYPE),position='dodge')
simulation_means %>%
ggplot(aes(MEAN1)) +
geom_histogram(fill = 'lightblue', color = 'navy', alpha = 1) +
geom_vline(aes(xintercept = 0.6852), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Mean proportion of lineage distinctions in Ego parent generation',
color = legend) +
xlab('GEN_1 means')
lmer(GEN_0 ~ 1 + GEN_1 + (1|LANGUAGE), data = simulations)
lmer(GEN_0 ~ GEN_1, data = simulations)
lm(GEN_0 ~ GEN_1, data = simulations)
lm(GEN_0 ~ GEN_1, data = simulations)
lm(GEN_0 ~ GEN_1, data=kinbank)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # for data preprocessing
library(ggplot2) # for plotting
library(lme4) # for model fitting
age_prop_files <- list.files(path="../../data/raw/age/prop/",pattern="*.csv",full.names=TRUE)
age_data <- do.call(rbind, lapply(age_prop_files, function(x) read.csv(x)))
age_data <- age_data %>%
mutate(
TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
'simulation',
'kinbank'
))
age_data$GEN_0 <- as.numeric(age_data$GEN_0)
age_data$GEN_1 <- as.numeric(age_data$GEN_1)
age_data
write.csv(age_data, '../../data/processed/all_age_proportions.csv')
simulations <- filter(age_data,TYPE == 'simulation')
kinbank <- filter(age_data,TYPE == 'kinbank')
write.csv(kinbank, '../../data/processed/kinbank_age_proportions.csv')
write.csv(simulations, '../../data/processed/simulated_age_proportions.csv')
simulation_means <- group_by(simulations,SET) %>%
summarise(
MEAN0 = mean(GEN_0),
MEAN1 = mean(GEN_1)
)
kinbank_mean <- group_by(kinbank,SET) %>%
summarise(
MEAN0 = mean(GEN_0),
MEAN1 = mean(GEN_1)
)
simulation_means
kinbank_mean
sim_prop_sample <- sample_n(simulations,1000, replace=FALSE)
kinbank_prop_sample <- sample_n(kinbank,1000,replace=FALSE)
rbind(sim_prop_sample,kinbank_prop_sample) %>%
ggplot() +
geom_histogram(aes(GEN_0,fill=TYPE),position='dodge')
simulation_means %>%
ggplot(aes(MEAN0)) +
geom_histogram(fill = 'lightblue', color = 'navy', alpha = 1) +
geom_vline(aes(xintercept = 0.3581), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Mean proportion of age distinctions in Ego generation',
color = legend) +
xlab('GEN_0 means')
rbind(sim_prop_sample,kinbank_prop_sample) %>%
ggplot() +
geom_histogram(aes(GEN_1,fill=TYPE),position='dodge')
simulation_means %>%
ggplot(aes(MEAN1)) +
geom_histogram(fill = 'lightblue', color = 'navy', alpha = 1) +
geom_vline(aes(xintercept = 0.1241), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Mean proportion of age distinctions in Ego parent generation',
color = legend) +
xlab('GEN_1 means')
rbind(sim_prop_sample,kinbank_prop_sample) %>%
ggplot(aes(x=GEN_0, y=GEN_1,color=TYPE)) +
geom_jitter(alpha=0.2,width = 0.2) +
xlim(0,1) +
ylim(0,1) +
geom_smooth(method=lm)
cor.test(simulations$GEN_0,simulations$GEN_1, method = 'spearman')
cor.test(kinbank$GEN_0,kinbank$GEN_1, method = 'spearman')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # for data preprocessing
library(ggplot2) # for plotting
library(lme4) # for model fitting
# gender_prop_files <- list.files(path="../../data/raw/gender/prop/",pattern="*.csv",full.names=TRUE)
# gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
test_prop_files <- list.files(path="../../test/data/",pattern="*.csv",full.names=TRUE)
test_data <- do.call(rbind, lapply(data_prop_files, function(x) read.csv(x)))
# gender_prop_files <- list.files(path="../../data/raw/gender/prop/",pattern="*.csv",full.names=TRUE)
# gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
test_prop_files <- list.files(path="../../test/data/",pattern="*.csv",full.names=TRUE)
test_data <- do.call(rbind, lapply(test_prop_files, function(x) read.csv(x)))
View(test_data)
# gender_data <- gender_data %>%
#   mutate(
#
#     TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
#     'simulation',
#     'kinbank'
#   ))
# delete the above
#
# gender_data$GEN_0 <- as.numeric(gender_data$GEN_0)
# gender_data$GEN_1 <- as.numeric(gender_data$GEN_1)
#
#
# gender_data
test_data$gen0 <- as.numeric(test_data$gen0)
test_data$gen1 <- as.numeric(test_data$gen1)
test_data
# simulations <- filter(gender_data,TYPE == 'simulation')
# kinbank <- filter(gender_data,TYPE == 'kinbank')
simulations <- filter(test_data,data_type == 'simulation')
kinbank <- filter(test_data,data_type == 'kinbank')
simulation_means <- group_by(simulations,SET) %>%
summarise(
MEAN0 = mean(gen0),
MEAN1 = mean(gen1)
)
simulation_means <- group_by(simulations,set) %>%
summarise(
MEAN0 = mean(gen0),
MEAN1 = mean(gen1)
)
kinbank_mean <- group_by(kinbank,set) %>%
summarise(
MEAN0 = mean(gen0),
MEAN1 = mean(gen1)
)
simulation_means
kinbank_mean
# simulations <- filter(gender_data,TYPE == 'simulation')
# kinbank <- filter(gender_data,TYPE == 'kinbank')
simulations <- filter(test_data,data_type == 'frankenlanguage')
kinbank <- filter(test_data,data_type == 'kinbank')
simulation_means <- group_by(simulations,set) %>%
summarise(
MEAN0 = mean(gen0),
MEAN1 = mean(gen1)
)
kinbank_mean <- group_by(kinbank,set) %>%
summarise(
MEAN0 = mean(gen0),
MEAN1 = mean(gen1)
)
simulation_means
kinbank_mean
# gender_prop_files <- list.files(path="../../data/raw/gender/prop/",pattern="*.csv",full.names=TRUE)
# gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
test_prop_files <- list.files(path="../../test/data/",pattern="*.csv",full.names=TRUE)
test_data <- do.call(rbind, lapply(test_prop_files, function(x) read.csv(x)))
# gender_data <- gender_data %>%
#   mutate(
#
#     TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
#     'simulation',
#     'kinbank'
#   ))
# delete the above
#
# gender_data$GEN_0 <- as.numeric(gender_data$GEN_0)
# gender_data$GEN_1 <- as.numeric(gender_data$GEN_1)
#
#
# gender_data
test_data$gen0 <- as.numeric(test_data$gen0)
test_data$gen1 <- as.numeric(test_data$gen1)
test_data
# simulations <- filter(gender_data,TYPE == 'simulation')
# kinbank <- filter(gender_data,TYPE == 'kinbank')
simulations <- filter(test_data,data_type == 'frankenlanguage')
kinbank <- filter(test_data,data_type == 'kinbank')
simulation_means <- group_by(simulations,set) %>%
summarise(
MEAN0 = mean(gen0),
MEAN1 = mean(gen1)
)
kinbank_mean <- group_by(kinbank,set) %>%
summarise(
MEAN0 = mean(gen0),
MEAN1 = mean(gen1)
)
simulation_means
kinbank_mean
# gender_prop_files <- list.files(path="../../data/raw/gender/prop/",pattern="*.csv",full.names=TRUE)
# gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
test_prop_files <- list.files(path="../../test/data/",pattern="*.csv",full.names=TRUE)
test_data <- do.call(rbind, lapply(test_prop_files, function(x) read.csv(x)))
# gender_data <- gender_data %>%
#   mutate(
#
#     TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
#     'simulation',
#     'kinbank'
#   ))
# delete the above
#
# gender_data$GEN_0 <- as.numeric(gender_data$GEN_0)
# gender_data$GEN_1 <- as.numeric(gender_data$GEN_1)
#
#
# gender_data
test_data$gen0 <- as.numeric(test_data$gen0)
test_data$gen1 <- as.numeric(test_data$gen1)
test_data
# simulations <- filter(gender_data,TYPE == 'simulation')
# kinbank <- filter(gender_data,TYPE == 'kinbank')
simulations <- filter(test_data,data_type == 'frankenlanguage')
kinbank <- filter(test_data,data_type == 'kinbank')
simulation_means <- group_by(simulations,set) %>%
summarise(
MEAN0 = mean(gen0),
MEAN1 = mean(gen1)
)
kinbank_mean <- group_by(kinbank,set) %>%
summarise(
MEAN0 = mean(gen0),
MEAN1 = mean(gen1)
)
simulation_means
kinbank_mean
sim_prop_sample <- sample_n(simulations,1000, replace=FALSE)
kinbank_prop_sample <- sample_n(kinbank,1000,replace=FALSE)
rbind(sim_prop_sample,kinbank_prop_sample) %>%
ggplot() +
geom_histogram(aes(GEN_0,fill=TYPE),position='dodge')
rbind(sim_prop_sample,kinbank_prop_sample) %>%
ggplot() +
geom_histogram(aes(gen0,fill=TYPE),position='dodge')
rbind(sim_prop_sample,kinbank_prop_sample) %>%
ggplot() +
geom_histogram(aes(gen0,fill=data_type),position='dodge')
simulation_means %>%
ggplot(aes(MEAN0)) +
geom_histogram(fill = 'lightblue', color = 'navy', alpha = 1) +
geom_vline(aes(xintercept = 0.5868), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Mean proportion of gender distinctions in Ego generation',
color = legend) +
xlab('GEN_0 means')
# gender_prop_files <- list.files(path="../../data/raw/gender/prop/",pattern="*.csv",full.names=TRUE)
# gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
test_prop_files <- list.files(path="../../test/data/",pattern="*.csv",full.names=TRUE)
test_data <- do.call(rbind, lapply(test_prop_files, function(x) read.csv(x)))
# gender_data <- gender_data %>%
#   mutate(
#
#     TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
#     'simulation',
#     'kinbank'
#   ))
# delete the above
#
# gender_data$GEN_0 <- as.numeric(gender_data$GEN_0)
# gender_data$GEN_1 <- as.numeric(gender_data$GEN_1)
#
#
# gender_data
test_data$gen0 <- as.numeric(test_data$gen0)
test_data$gen1 <- as.numeric(test_data$gen1)
test_data
# simulations <- filter(gender_data,TYPE == 'simulation')
# kinbank <- filter(gender_data,TYPE == 'kinbank')
simulations <- filter(test_data,data_type == 'frankenlanguage')
kinbank <- filter(test_data,data_type == 'kinbank')
simulation_means <- group_by(simulations,set) %>%
summarise(
MEAN0 = mean(gen0),
MEAN1 = mean(gen1)
)
kinbank_mean <- group_by(kinbank,set) %>%
summarise(
MEAN0 = mean(gen0),
MEAN1 = mean(gen1)
)
simulation_means
kinbank_mean
rbind(sim_prop_sample,kinbank_prop_sample) %>%
ggplot() +
geom_histogram(aes(gen0,fill=data_type),position='dodge')
simulation_means %>%
ggplot(aes(MEAN0)) +
geom_histogram(fill = 'lightblue', color = 'navy', alpha = 1) +
geom_vline(aes(xintercept = 0.5868), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Mean proportion of gender distinctions in Ego generation',
color = legend) +
xlab('GEN_0 means')
rbind(sim_prop_sample,kinbank_prop_sample) %>%
ggplot() +
geom_histogram(aes(GEN_1,fill=TYPE),position='dodge')
rbind(sim_prop_sample,kinbank_prop_sample) %>%
ggplot() +
geom_histogram(aes(gen1,fill=TYPE),position='dodge')
sim_prop_sample <- sample_n(simulations,1000, replace=FALSE)
# sim_prop_sample <- sample_n(simulations,1000, replace=FALSE)
# kinbank_prop_sample <- sample_n(kinbank,1000,replace=FALSE)
sim_prop_sample <- sample_n(simulations,775, replace=FALSE)
kinbank_prop_sample <- sample_n(kinbank,775,replace=FALSE)
rbind(sim_prop_sample,kinbank_prop_sample) %>%
ggplot() +
geom_histogram(aes(gen0,fill=data_type),position='dodge')
simulation_means %>%
ggplot(aes(MEAN0)) +
geom_histogram(fill = 'lightblue', color = 'navy', alpha = 1) +
geom_vline(aes(xintercept = 0.5868), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Mean proportion of gender distinctions in Ego generation',
color = legend) +
xlab('GEN_0 means')
rbind(sim_prop_sample,kinbank_prop_sample) %>%
ggplot() +
geom_histogram(aes(gen1,fill=data_type),position='dodge')
simulation_means %>%
ggplot(aes(MEAN1)) +
geom_histogram(fill = 'lightblue', color = 'navy', alpha = 1) +
geom_vline(aes(xintercept = 0.9595), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Mean proportion of gender distinctions in Ego parent generation',
color = legend) +
xlab('GEN_1 means')
# gender_prop_files <- list.files(path="../../data/raw/gender/prop/",pattern="*.csv",full.names=TRUE)
# gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
test_prop_files <- list.files(path="../../test/data/",pattern="*.csv",full.names=TRUE)
test_data <- do.call(rbind, lapply(test_prop_files, function(x) read.csv(x)))
# gender_data <- gender_data %>%
#   mutate(
#
#     TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
#     'simulation',
#     'kinbank'
#   ))
# delete the above
#
# gender_data$GEN_0 <- as.numeric(gender_data$GEN_0)
# gender_data$GEN_1 <- as.numeric(gender_data$GEN_1)
#
#
# gender_data
test_data$gen0 <- as.numeric(test_data$gen0)
test_data$gen1 <- as.numeric(test_data$gen1)
test_data
# write.csv(gender_data, '../../data/processed/all_gender_proportions.csv')
# simulations <- filter(gender_data,TYPE == 'simulation')
# kinbank <- filter(gender_data,TYPE == 'kinbank')
simulations <- filter(test_data,data_type == 'frankenlanguage')
kinbank <- filter(test_data,data_type == 'kinbank')
simulation_means <- group_by(simulations,set) %>%
summarise(
MEAN0 = mean(gen0),
MEAN1 = mean(gen1)
)
kinbank_mean <- group_by(kinbank,set) %>%
summarise(
MEAN0 = mean(gen0),
MEAN1 = mean(gen1)
)
simulation_means
kinbank_mean
simulation_means %>%
ggplot(aes(MEAN0)) +
geom_histogram(fill = 'lightblue', color = 'navy', alpha = 1) +
geom_vline(aes(xintercept = 0.5868), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Mean proportion of gender distinctions in Ego generation',
color = legend) +
xlab('GEN_0 means')
simulation_means %>%
ggplot(aes(MEAN1)) +
geom_histogram(fill = 'lightblue', color = 'navy', alpha = 1) +
geom_vline(aes(xintercept = 0.9595), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Mean proportion of gender distinctions in Ego parent generation',
color = legend) +
xlab('GEN_1 means')
# gender_prop_files <- list.files(path="../../data/raw/gender/prop/",pattern="*.csv",full.names=TRUE)
# gender_data <- do.call(rbind, lapply(gender_prop_files, function(x) read.csv(x)))
test_prop_files <- list.files(path="../../test/data/",pattern="*.csv",full.names=TRUE)
test_data <- do.call(rbind, lapply(test_prop_files, function(x) read.csv(x)))
# gender_data <- gender_data %>%
#   mutate(
#
#     TYPE = ifelse (grepl('frankenlanguage', LANGUAGE),
#     'simulation',
#     'kinbank'
#   ))
# delete the above
#
# gender_data$GEN_0 <- as.numeric(gender_data$GEN_0)
# gender_data$GEN_1 <- as.numeric(gender_data$GEN_1)
#
#
# gender_data
test_data$gen0 <- as.numeric(test_data$gen0)
test_data$gen1 <- as.numeric(test_data$gen1)
test_data
# simulations <- filter(gender_data,TYPE == 'simulation')
# kinbank <- filter(gender_data,TYPE == 'kinbank')
simulations <- filter(test_data,data_type == 'frankenlanguage')
kinbank <- filter(test_data,data_type == 'kinbank')
simulation_means <- group_by(simulations,set) %>%
summarise(
MEAN0 = mean(gen0),
MEAN1 = mean(gen1)
)
kinbank_mean <- group_by(kinbank,set) %>%
summarise(
MEAN0 = mean(gen0),
MEAN1 = mean(gen1)
)
simulation_means
kinbank_mean
simulation_means %>%
ggplot(aes(MEAN0)) +
geom_histogram(fill = 'lightblue', color = 'navy', alpha = 1) +
geom_vline(aes(xintercept = 0.5868), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Mean proportion of gender distinctions in Ego generation',
color = legend) +
xlab('GEN_0 means')
simulation_means %>%
ggplot(aes(MEAN1)) +
geom_histogram(fill = 'lightblue', color = 'navy', alpha = 1) +
geom_vline(aes(xintercept = 0.9595), color="navy", linetype="dashed", size=0.5) +
labs(
title = 'Mean proportion of gender distinctions in Ego parent generation',
color = legend) +
xlab('GEN_1 means')
install.packages(c('coda,','mvtnorm','devtools','dagitty'))
library(devtools)
devtools::install_github('rmcelreath/rethinking')
library(tidyverse)
hindi <- read_csv('../../data/raw/ics_Hindi.csv')
hindi <- read_csv('../../data/raw/ics_Hindi.csv')
setwd('..')
wd()
setwd("C:/Users/s1604058/Desktop/PhD/feature-symmetry/code/analysis")
hindi <- read_csv('../../data/raw/ics_Hindi.csv')
hindi$mutual_information $>$ hist()
hindi$mutual_information %>% hist()
abline(v=1.618922)
hindi$mutual_information %>% hist()
abline(v=1.618922)
hindi %>% ggplot2() +
geom_jitter(aes(x = mutual_information, y = entropy))
hindi %>% ggplot() +
geom_jitter(aes(x = mutual_information, y = entropy))
